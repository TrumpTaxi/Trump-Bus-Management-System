/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import domain.Bus;
import domain.Scheduler;
import domain.Seat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author han
 */
public class updateSche extends javax.swing.JFrame {

    /**
     * Creates new form updateSche
     */
    public updateSche(String scheID) {
        initComponents();
        tf_scheID.setText(scheID);
        try{
            scheTier st = new scheTier();
            Scheduler s = new Scheduler();
            s.setScheID(scheID);
            s = st.retrieveByID(scheID);
            if(s==null)
                JOptionPane.showMessageDialog(null, "Fail to retrieve schedule");
            else{
                tf_scheD.setText(s.getScheDate());
                int t = Integer.parseInt(s.getDeparture());
                String scheT = String.format("%04d",t);
                tf_scheT.setText(scheT);
                tf_dest.setText(s.getDest());
                cb_busID.setSelectedItem(s.getBusID());
                cb_driverID.setSelectedItem(s.getDriverID());
                tf_normal.setText(s.getNormal());
                tf_vip.setText(s.getVip());
            }
            
            Seat seat = new Seat();
            seat.setScheID(scheID);
            SeatTier stt = new SeatTier();
            seat = stt.seatprice(seat);
            if(seat==null)
                JOptionPane.showMessageDialog(null, "Fail to retrieve schedule");
            else
            {
                tf_seatP.setText(seat.getPriceN()+"");
                tf_vipp.setText(seat.getPriceVip()+"");
            }
            
            busTier bt = new busTier();
            ArrayList busID = bt.getBusList();
            DefaultComboBoxModel model = (DefaultComboBoxModel)cb_busID.getModel();
            for(int i=0; i<busID.size();i++){
                String busId = (String) busID.get(i);
                model.addElement(busId);
            }
            driverTier dt = new driverTier();
            ArrayList driverID = dt.getDriverList();
            DefaultComboBoxModel model2 = (DefaultComboBoxModel)cb_driverID.getModel();
            for(int i=0; i<driverID.size();i++){
                String driverId = (String) driverID.get(i);
                model2.addElement(driverId);
            }
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Fail to retrieve record");
        }
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_scheD = new javax.swing.JTextField();
        tf_scheT = new javax.swing.JTextField();
        tf_dest = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cb_busID = new javax.swing.JComboBox<String>();
        cb_driverID = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tf_vip = new javax.swing.JTextField();
        tf_normal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_seatP = new javax.swing.JTextField();
        tf_scheID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tf_vipp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Schedule");
        setMinimumSize(new java.awt.Dimension(515, 474));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Update Schedule");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 40, 172, 28);

        jLabel6.setText("Bus ID :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(130, 230, 45, 16);

        jLabel7.setText("Driver ID :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(120, 260, 59, 16);
        getContentPane().add(tf_scheD);
        tf_scheD.setBounds(180, 122, 148, 30);
        getContentPane().add(tf_scheT);
        tf_scheT.setBounds(190, 160, 47, 30);
        getContentPane().add(tf_dest);
        tf_dest.setBounds(180, 190, 244, 30);

        jLabel8.setText("(YYYY-MM-DD)");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(340, 130, 84, 16);

        cb_busID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_busIDActionPerformed(evt);
            }
        });
        getContentPane().add(cb_busID);
        cb_busID.setBounds(180, 222, 80, 30);

        getContentPane().add(cb_driverID);
        cb_driverID.setBounds(180, 252, 80, 30);

        jLabel9.setText("Example : 1430");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(240, 160, 89, 16);

        jLabel10.setText("Number of Normal Seat :");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(80, 300, 144, 16);

        jLabel11.setText("Number of VIP Seat :");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(100, 330, 122, 16);

        tf_vip.setEditable(false);
        getContentPane().add(tf_vip);
        tf_vip.setBounds(230, 330, 33, 30);

        tf_normal.setEditable(false);
        tf_normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_normalActionPerformed(evt);
            }
        });
        getContentPane().add(tf_normal);
        tf_normal.setBounds(230, 292, 40, 30);

        jLabel12.setText("Price : RM");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(280, 300, 59, 16);

        jLabel13.setText("Price : RM");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(280, 330, 59, 16);

        jLabel2.setText("Schedule ID :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(100, 90, 77, 16);
        getContentPane().add(tf_seatP);
        tf_seatP.setBounds(340, 292, 90, 30);

        tf_scheID.setEditable(false);
        getContentPane().add(tf_scheID);
        tf_scheID.setBounds(180, 82, 148, 30);

        jLabel3.setText("Schedule Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 130, 91, 16);
        getContentPane().add(tf_vipp);
        tf_vipp.setBounds(340, 330, 90, 30);

        jLabel4.setText("Time Departure :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 160, 99, 16);

        jLabel5.setText("Destination :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(110, 200, 72, 16);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/blue-ok-icon (1).png"))); // NOI18N
        jButton1.setText("Update Schedule");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(99, 390, 160, 25);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Arrow-Back-icon (1).png"))); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(290, 390, 103, 25);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/q0YWfFw.jpg"))); // NOI18N
        getContentPane().add(jLabel14);
        jLabel14.setBounds(0, 0, 490, 440);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cb_busIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_busIDActionPerformed
        String busID = (String) cb_busID.getSelectedItem();
        try{
            busTier bt = new busTier();
            Bus b = new Bus();
            b.setBusID(busID);
            b = bt.retrieveBus(b);
            if(b==null)
            JOptionPane.showMessageDialog(null, "Fail to retrieve bus record");
            else{
                tf_normal.setText(b.getSeat()+"");
                tf_vip.setText(b.getVip()+"");
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Fail to retrieve bus'seat  record");
        }

    }//GEN-LAST:event_cb_busIDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        scheChoice sc = new scheChoice();
        sc.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String scheD = tf_scheD.getText();
        String scheT = tf_scheT.getText();
        String dest = tf_dest.getText();
        String busID = (String) cb_busID.getSelectedItem();
        String driverID = (String) cb_driverID.getSelectedItem();
        String normal = tf_normal.getText();
        String vip = tf_vip.getText();
        double normalp = Double.parseDouble(tf_seatP.getText());
        double vipp = Double.parseDouble(tf_vipp.getText());
        String scheID = tf_scheID.getText();
        
        boolean valid = true;
        String invalid = "";
                
        int day;
        int month;
        if (scheD.matches("([0-9]{4})-([0-9]{2})-([0-9]{2})"))
            valid=true;
        else{
            valid=false;
            invalid = "Invalid Schedule Date Format";
        }
        if(valid){
            day = Integer.parseInt(scheD.substring(8));
            month = Integer.parseInt(scheD.substring(5,7));
            if(day>31){
                valid=false;
                invalid = "Invalid Date";
            }
            if(month>12){
                valid=false;
                invalid = "Invalid Month";
            }
        }
        if(valid){
            try{
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Calendar cal = Calendar.getInstance();
            String today = sdf.format(cal.getTime());
            Date tod = sdf.parse(today);
            Date d = sdf.parse(scheD);
            if(d.before(tod)==true){
                valid=false;
                invalid = "Invalid Date, Cannot create Schedule for the past.";
            }
            
            }catch(Exception ex){
                System.out.println(ex);
            }
                
        }
        
        
        for(int a=0;a<normal.length();a++){
            char temp1 = normal.charAt(a);
            if(Character.isLetter(temp1)==true){
                valid = false;
                invalid = "Please insert only number for Seat Number";
            }
        }
        
        for(int i=0;i<vip.length();i++){
            char temp = vip.charAt(i);
            if(Character.isLetter(temp)==true){
                valid = false;
                invalid = "Please insert only number for Seat Number";
            }
        }
        
        for(int o=0;o<scheT.length();o++){
            char temp3 = scheT.charAt(o);
            if(Character.isLetter(temp3)){
                valid = false;
                invalid = "Invalid Time Format";
            }
        }
        
        if(scheT.length()!=4){
            valid = false;
            invalid = "Invalid Time Format.\nPlease Enter the Time Using 24hours Format";
        }else{
            String hh = scheT.substring(0,2);
            int h = Integer.parseInt(hh);
            String mm = scheT.substring(2);
            int m = Integer.parseInt(mm);
            if(h>23||m>59){
                valid = false;
                invalid = "Invalid Time\nPlease Enter the Time Using 24hours Format";
            }
        }
        
        
        
        if(valid){
        try{
            scheTier st = new scheTier();
            Scheduler s = new Scheduler();
            s.setScheID(scheID);
            s.setBusID(busID);
            s.setDeparture(scheT);
            s.setDest(dest);
            s.setNormal(normal);
            s.setDriverID(driverID);
            s.setVip(vip);
            s.setScheDate(scheD);
            
            Seat seat = new Seat();
            seat.setScheID(scheID);
            SeatTier stt = new SeatTier();
            seat.setPriceN(normalp);
            seat.setPriceVip(vipp);
            
            boolean success = st.updateSche(s);
            if(!success)
                JOptionPane.showMessageDialog(null, "Fail to update schedule");
            else{
                boolean success2 = stt.updateSeat(seat);
                if(!success2)
                    JOptionPane.showMessageDialog(null, "Fail to update seat price");
                else{
                    JOptionPane.showMessageDialog(null, "Schedule Updated Successfully.");
                    dispose();
                    scheChoice sc = new scheChoice();
                    sc.setVisible(true);
                }
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Fail to update record");
        }
        }else
            JOptionPane.showMessageDialog(null, invalid);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_normalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_normalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateSche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateSche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateSche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateSche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new updateSche().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_busID;
    private javax.swing.JComboBox<String> cb_driverID;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tf_dest;
    private javax.swing.JTextField tf_normal;
    private javax.swing.JTextField tf_scheD;
    private javax.swing.JTextField tf_scheID;
    private javax.swing.JTextField tf_scheT;
    private javax.swing.JTextField tf_seatP;
    private javax.swing.JTextField tf_vip;
    private javax.swing.JTextField tf_vipp;
    // End of variables declaration//GEN-END:variables
}
